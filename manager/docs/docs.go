// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://starton.io",
            "email": "support@starton.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/networks": {
            "get": {
                "description": "Get list networks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Get list networks",
                "operationId": "listNetworks",
                "parameters": [
                    {
                        "type": "string",
                        "name": "blockchain",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "chainId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponse-ListNetworkRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Create a network",
                "operationId": "createNetwork",
                "parameters": [
                    {
                        "description": "Network request",
                        "name": "network",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Network"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.CreatedSuccessResponse-CreateNetworkRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/networks/{name}": {
            "delete": {
                "description": "Delete a network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Delete a network",
                "operationId": "deleteNetwork",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponse-DeleteNetworkRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/plugins": {
            "get": {
                "description": "Get list plugins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins"
                ],
                "summary": "Get list plugins",
                "operationId": "listPlugins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponse-plugin_ListPluginsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/recommendations": {
            "get": {
                "description": "List recommendation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recommendations"
                ],
                "summary": "List recommendation",
                "operationId": "listRecommendations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponse-ListRecommendationRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a recommendation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recommendations"
                ],
                "summary": "Update a recommendation",
                "operationId": "updateRecommendation",
                "parameters": [
                    {
                        "description": "Recommendation Object request",
                        "name": "recommendation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateRecommendationReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponseWithoutData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a recommendation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recommendations"
                ],
                "summary": "Create a recommendation",
                "operationId": "createRecommendation",
                "parameters": [
                    {
                        "description": "Recommendation Object request",
                        "name": "recommendation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRecommendationReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.CreatedSuccessResponse-CreateRecommendationRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/recommendations/{route_uuid}": {
            "delete": {
                "description": "Delete a recommendation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recommendations"
                ],
                "summary": "Delete a recommendation",
                "operationId": "deleteRecommendation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Route UUID",
                        "name": "route_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponseWithoutData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.NotFoundResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/responses.ConflictResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/routes": {
            "get": {
                "description": "Get list routes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Get list routes",
                "operationId": "listRoutes",
                "parameters": [
                    {
                        "type": "string",
                        "name": "host",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "weight-round-robin",
                            "least-load",
                            "failover-priority"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "BalancerWeightRoundRobin",
                            "BalancerLeastLoad",
                            "BalancerPriority"
                        ],
                        "name": "loadBalancerStrategy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "uuid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponse-ListRouteRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Create a route",
                "operationId": "createRoute",
                "parameters": [
                    {
                        "description": "Route request",
                        "name": "route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRouteReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.CreatedSuccessResponse-CreateRouteRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/routes/{route_uuid}/upstreams": {
            "get": {
                "description": "Get list upstreams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upstreams"
                ],
                "summary": "Get list upstreams",
                "operationId": "listUpstreams",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Route UUID",
                        "name": "route_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponse-ListUpstreamRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Create or update a upstream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upstreams"
                ],
                "summary": "Create or update a upstream",
                "operationId": "upsertUpstream",
                "parameters": [
                    {
                        "description": "Upstream request",
                        "name": "upstream",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upstream"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Route UUID",
                        "name": "route_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.CreatedSuccessResponse-UpstreamUpsertRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/routes/{route_uuid}/upstreams/{uuid}": {
            "delete": {
                "description": "Delete a upstream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upstreams"
                ],
                "summary": "Delete a upstream",
                "operationId": "deleteUpstream",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Route UUID",
                        "name": "route_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Upstream UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponse-UpstreamUpsertRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/routes/{uuid}": {
            "delete": {
                "description": "Delete a route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Delete a route",
                "operationId": "deleteRoute",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Route UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponseWithoutData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Update a route",
                "operationId": "updateRoute",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Route request",
                        "name": "route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateRouteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponseWithoutData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/routes/{uuid}/attach-plugin": {
            "post": {
                "description": "Attach plugin to route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins"
                ],
                "summary": "Attach plugin to route",
                "operationId": "attachPlugin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Route UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Attach plugin request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AttachPluginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponseWithoutData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/routes/{uuid}/detach-plugin": {
            "post": {
                "description": "Detach plugin from route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins"
                ],
                "summary": "Detach plugin from route",
                "operationId": "detachPlugin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Route UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Detach plugin request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DetachPluginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponseWithoutData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/routes/{uuid}/plugins": {
            "get": {
                "description": "Get list plugins from route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins"
                ],
                "summary": "Get list plugins from route",
                "operationId": "listPluginsFromRoute",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Route UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponse-Plugins"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/rpcs": {
            "get": {
                "description": "List RPCs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rpcs"
                ],
                "summary": "List RPCs",
                "operationId": "listRPCs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Chain ID",
                        "name": "chain_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "provider",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "network_name",
                        "name": "network_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort_by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "sort_ascending",
                        "name": "sort_ascending",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponse-ListRpcRes"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a RPC",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rpcs"
                ],
                "summary": "Update a RPC",
                "operationId": "updateRPC",
                "parameters": [
                    {
                        "description": "RPC Object request",
                        "name": "rpc",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Rpc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponseWithoutData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Rpc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rpcs"
                ],
                "summary": "Create a new Rpc",
                "operationId": "createRpc",
                "parameters": [
                    {
                        "description": "Rpc request",
                        "name": "rpc",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRpcReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.CreatedSuccessResponse-CreateRpcRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/rpcs/{uuid}": {
            "delete": {
                "description": "Delete a RPC",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rpcs"
                ],
                "summary": "Delete a RPC",
                "operationId": "deleteRPC",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DefaultSuccessResponseWithoutData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InternalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "balancer.LoadBalancerStrategy": {
            "type": "string",
            "enum": [
                "weight-round-robin",
                "least-load",
                "failover-priority"
            ],
            "x-enum-varnames": [
                "BalancerWeightRoundRobin",
                "BalancerLeastLoad",
                "BalancerPriority"
            ]
        },
        "circuitbreaker.Settings": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "integer"
                },
                "max_consecutive_failures": {
                    "type": "integer"
                },
                "max_requests": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "CreateNetworkRes": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                }
            }
        },
        "DeleteNetworkRes": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "ListNetworkRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Network"
                    }
                }
            }
        },
        "Network": {
            "type": "object",
            "required": [
                "blockchain",
                "chain_id",
                "name"
            ],
            "properties": {
                "blockchain": {
                    "type": "string",
                    "example": "ethereum"
                },
                "chain_id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "eth-mainnet"
                }
            }
        },
        "AttachPluginReq": {
            "type": "object",
            "required": [
                "config",
                "name",
                "priority",
                "type"
            ],
            "properties": {
                "config": {},
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "type": {
                    "$ref": "#/definitions/plugin.PluginType"
                }
            }
        },
        "DetachPluginReq": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/plugin.PluginType"
                }
            }
        },
        "Plugin": {
            "type": "object",
            "required": [
                "name",
                "priority"
            ],
            "properties": {
                "config": {},
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                }
            }
        },
        "Plugins": {
            "type": "object",
            "properties": {
                "Middleware": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Plugin"
                    }
                },
                "RequestInterceptor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Plugin"
                    }
                },
                "ResponseInterceptor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Plugin"
                    }
                }
            }
        },
        "CreateRouteReq": {
            "type": "object",
            "required": [
                "host",
                "load_balancer_strategy"
            ],
            "properties": {
                "circuit_breaker": {
                    "$ref": "#/definitions/circuitbreaker.Settings"
                },
                "health_check": {
                    "$ref": "#/definitions/healthcheck.HealthCheckConfig"
                },
                "host": {
                    "type": "string"
                },
                "load_balancer_strategy": {
                    "$ref": "#/definitions/balancer.LoadBalancerStrategy"
                },
                "path": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "CreateRouteRes": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "ListRouteRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Route"
                    }
                }
            }
        },
        "Route": {
            "type": "object",
            "required": [
                "host",
                "load_balancer_strategy"
            ],
            "properties": {
                "circuit_breaker": {
                    "$ref": "#/definitions/circuitbreaker.Settings"
                },
                "health_check": {
                    "$ref": "#/definitions/healthcheck.HealthCheckConfig"
                },
                "host": {
                    "type": "string"
                },
                "load_balancer_strategy": {
                    "$ref": "#/definitions/balancer.LoadBalancerStrategy"
                },
                "path": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "UpdateRouteReq": {
            "type": "object",
            "properties": {
                "circuit_breaker": {
                    "$ref": "#/definitions/circuitbreaker.Settings"
                },
                "health_check": {
                    "$ref": "#/definitions/healthcheck.HealthCheckConfig"
                },
                "host": {
                    "description": "Uuid                 string                         ` + "`" + `json:\"uuid\" validate:\"required,uuid\"` + "`" + `",
                    "type": "string"
                },
                "load_balancer_strategy": {
                    "$ref": "#/definitions/balancer.LoadBalancerStrategy"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "ListUpstreamRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Upstream"
                    }
                }
            }
        },
        "Upstream": {
            "type": "object",
            "required": [
                "weight"
            ],
            "properties": {
                "fasthttp_settings": {
                    "$ref": "#/definitions/UpstreamFastHTTPSettings"
                },
                "host": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 0
                },
                "rpc_uuid": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "weight": {
                    "type": "number",
                    "maximum": 100,
                    "minimum": 0
                }
            }
        },
        "UpstreamFastHTTPSettings": {
            "type": "object",
            "properties": {
                "proxy_host": {
                    "type": "string"
                }
            }
        },
        "UpstreamUpsertRes": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "CreateRecommendationReq": {
            "type": "object",
            "required": [
                "network_name",
                "route_uuid",
                "schedule",
                "strategy"
            ],
            "properties": {
                "network_name": {
                    "type": "string"
                },
                "route_uuid": {
                    "type": "string"
                },
                "schedule": {
                    "type": "string"
                },
                "strategy": {
                    "$ref": "#/definitions/StrategyName"
                }
            }
        },
        "CreateRecommendationRes": {
            "type": "object",
            "properties": {
                "route_uuid": {
                    "type": "string"
                }
            }
        },
        "ListRecommendationRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Recommendation"
                    }
                }
            }
        },
        "Recommendation": {
            "type": "object",
            "properties": {
                "network_name": {
                    "type": "string"
                },
                "route_uuid": {
                    "type": "string"
                },
                "schedule": {
                    "type": "string"
                },
                "strategy": {
                    "$ref": "#/definitions/StrategyName"
                }
            }
        },
        "StrategyName": {
            "type": "string",
            "enum": [
                "STRATEGY_CUSTOM",
                "STRATEGY_HIGHEST_BLOCK",
                "STRATEGY_AIR_UNDER_THE_CURVE"
            ],
            "x-enum-varnames": [
                "StrategyCustom",
                "StrategyHighestBlock",
                "StrategyAirUnderTheCurve"
            ]
        },
        "UpdateRecommendationReq": {
            "type": "object",
            "required": [
                "network_name",
                "route_uuid",
                "schedule",
                "strategy"
            ],
            "properties": {
                "network_name": {
                    "type": "string"
                },
                "route_uuid": {
                    "type": "string"
                },
                "schedule": {
                    "type": "string"
                },
                "strategy": {
                    "$ref": "#/definitions/StrategyName"
                }
            }
        },
        "CreateRpcReq": {
            "type": "object",
            "required": [
                "network_name",
                "provider",
                "type",
                "url"
            ],
            "properties": {
                "collectors": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "network_name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/RPCType"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "CreateRpcRes": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "ListRpcRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rpc"
                    }
                }
            }
        },
        "RPCType": {
            "type": "string",
            "enum": [
                "private",
                "public"
            ],
            "x-enum-varnames": [
                "RPCTypePrivate",
                "RPCTypePublic"
            ]
        },
        "Rpc": {
            "type": "object",
            "required": [
                "network_name",
                "provider",
                "type",
                "url"
            ],
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "collectors": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "network_name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/RPCType"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "healthcheck.HealthCheckConfig": {
            "type": "object",
            "properties": {
                "combined_with_circuit_breaker": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "integer"
                },
                "request": {
                    "$ref": "#/definitions/healthcheck.Request"
                },
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/healthcheck.HealthCheckType"
                }
            }
        },
        "healthcheck.HealthCheckType": {
            "type": "string",
            "enum": [
                "eth_block_number",
                "eth_syncing",
                "custom"
            ],
            "x-enum-varnames": [
                "EthBlockNumberType",
                "EthSyncingType",
                "CustomType"
            ]
        },
        "healthcheck.Request": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "method": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "plugin.ListPluginsResponse": {
            "type": "object",
            "properties": {
                "plugins": {
                    "description": "Map of plugin lists, keyed by an integer ID",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/plugin.PluginList"
                    }
                }
            }
        },
        "plugin.PluginList": {
            "type": "object",
            "properties": {
                "names": {
                    "description": "Repeated field of plugin names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "plugin.PluginType": {
            "type": "string",
            "enum": [
                "ResponseInterceptor",
                "RequestInterceptor",
                "Middleware"
            ],
            "x-enum-varnames": [
                "PluginTypeResponseInterceptor",
                "PluginTypeRequestInterceptor",
                "PluginTypeMiddleware"
            ]
        },
        "responses.BadRequestResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 3
                },
                "message": {
                    "type": "string",
                    "example": "Invalid input parameters"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "responses.ConflictResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 5
                },
                "message": {
                    "type": "string",
                    "example": "Conflict"
                },
                "status": {
                    "type": "integer",
                    "example": 409
                }
            }
        },
        "responses.CreatedSuccessResponse-CreateNetworkRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/CreateNetworkRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "responses.CreatedSuccessResponse-CreateRouteRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/CreateRouteRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "responses.CreatedSuccessResponse-UpstreamUpsertRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/UpstreamUpsertRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "responses.CreatedSuccessResponse-CreateRecommendationRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/CreateRecommendationRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "responses.CreatedSuccessResponse-CreateRpcRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/CreateRpcRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "responses.DefaultSuccessResponse-DeleteNetworkRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/DeleteNetworkRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "responses.DefaultSuccessResponse-ListNetworkRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/ListNetworkRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "responses.DefaultSuccessResponse-Plugins": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/Plugins"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "responses.DefaultSuccessResponse-ListRouteRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/ListRouteRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "responses.DefaultSuccessResponse-ListUpstreamRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/ListUpstreamRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "responses.DefaultSuccessResponse-UpstreamUpsertRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/UpstreamUpsertRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "responses.DefaultSuccessResponse-ListRecommendationRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/ListRecommendationRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "responses.DefaultSuccessResponse-ListRpcRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/ListRpcRes"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "responses.DefaultSuccessResponse-plugin_ListPluginsResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/plugin.ListPluginsResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Created Success"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "responses.DefaultSuccessResponseWithoutData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "responses.InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 13
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                },
                "status": {
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "responses.NotFoundResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 6
                },
                "message": {
                    "type": "string",
                    "example": "Not found"
                },
                "status": {
                    "type": "integer",
                    "example": 404
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Tyrscale Manager API",
	Description:      "This is the manager service for Tyrscale",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
