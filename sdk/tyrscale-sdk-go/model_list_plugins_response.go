/*
Tyrscale Manager API

This is the manager service for Tyrscale

API version: 1.0
Contact: support@starton.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tyrscalesdkgo

import (
	"encoding/json"
)

// checks if the ListPluginsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPluginsResponse{}

// ListPluginsResponse struct for ListPluginsResponse
type ListPluginsResponse struct {
	Plugins *map[string]Plugin `json:"plugins,omitempty"`
}

// NewListPluginsResponse instantiates a new ListPluginsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPluginsResponse() *ListPluginsResponse {
	this := ListPluginsResponse{}
	return &this
}

// NewListPluginsResponseWithDefaults instantiates a new ListPluginsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPluginsResponseWithDefaults() *ListPluginsResponse {
	this := ListPluginsResponse{}
	return &this
}

// GetPlugins returns the Plugins field value if set, zero value otherwise.
func (o *ListPluginsResponse) GetPlugins() map[string]Plugin {
	if o == nil || IsNil(o.Plugins) {
		var ret map[string]Plugin
		return ret
	}
	return *o.Plugins
}

// GetPluginsOk returns a tuple with the Plugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPluginsResponse) GetPluginsOk() (*map[string]Plugin, bool) {
	if o == nil || IsNil(o.Plugins) {
		return nil, false
	}
	return o.Plugins, true
}

// HasPlugins returns a boolean if a field has been set.
func (o *ListPluginsResponse) HasPlugins() bool {
	if o != nil && !IsNil(o.Plugins) {
		return true
	}

	return false
}

// SetPlugins gets a reference to the given map[string]Plugin and assigns it to the Plugins field.
func (o *ListPluginsResponse) SetPlugins(v map[string]Plugin) {
	o.Plugins = &v
}

func (o ListPluginsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPluginsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Plugins) {
		toSerialize["plugins"] = o.Plugins
	}
	return toSerialize, nil
}

type NullableListPluginsResponse struct {
	value *ListPluginsResponse
	isSet bool
}

func (v NullableListPluginsResponse) Get() *ListPluginsResponse {
	return v.value
}

func (v *NullableListPluginsResponse) Set(val *ListPluginsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListPluginsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListPluginsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPluginsResponse(val *ListPluginsResponse) *NullableListPluginsResponse {
	return &NullableListPluginsResponse{value: val, isSet: true}
}

func (v NullableListPluginsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPluginsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


