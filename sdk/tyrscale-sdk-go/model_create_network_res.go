/*
Tyrscale Manager API

This is the manager service for Tyrscale

API version: 1.0
Contact: support@starton.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tyrscalesdkgo

import (
	"encoding/json"
)

// checks if the CreateNetworkRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkRes{}

// CreateNetworkRes struct for CreateNetworkRes
type CreateNetworkRes struct {
	ChainId *int32 `json:"chain_id,omitempty"`
}

// NewCreateNetworkRes instantiates a new CreateNetworkRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkRes() *CreateNetworkRes {
	this := CreateNetworkRes{}
	return &this
}

// NewCreateNetworkResWithDefaults instantiates a new CreateNetworkRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkResWithDefaults() *CreateNetworkRes {
	this := CreateNetworkRes{}
	return &this
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *CreateNetworkRes) GetChainId() int32 {
	if o == nil || IsNil(o.ChainId) {
		var ret int32
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkRes) GetChainIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *CreateNetworkRes) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given int32 and assigns it to the ChainId field.
func (o *CreateNetworkRes) SetChainId(v int32) {
	o.ChainId = &v
}

func (o CreateNetworkRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChainId) {
		toSerialize["chain_id"] = o.ChainId
	}
	return toSerialize, nil
}

type NullableCreateNetworkRes struct {
	value *CreateNetworkRes
	isSet bool
}

func (v NullableCreateNetworkRes) Get() *CreateNetworkRes {
	return v.value
}

func (v *NullableCreateNetworkRes) Set(val *CreateNetworkRes) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkRes) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkRes(val *CreateNetworkRes) *NullableCreateNetworkRes {
	return &NullableCreateNetworkRes{value: val, isSet: true}
}

func (v NullableCreateNetworkRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


