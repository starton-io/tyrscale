/*
Tyrscale Manager API

This is the manager service for Tyrscale

API version: 1.0
Contact: support@starton.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tyrscalesdkgo

import (
	"encoding/json"
)

// checks if the DtoListPluginsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoListPluginsResponse{}

// DtoListPluginsResponse struct for DtoListPluginsResponse
type DtoListPluginsResponse struct {
	Plugins *map[string][]string `json:"plugins,omitempty"`
}

// NewDtoListPluginsResponse instantiates a new DtoListPluginsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoListPluginsResponse() *DtoListPluginsResponse {
	this := DtoListPluginsResponse{}
	return &this
}

// NewDtoListPluginsResponseWithDefaults instantiates a new DtoListPluginsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoListPluginsResponseWithDefaults() *DtoListPluginsResponse {
	this := DtoListPluginsResponse{}
	return &this
}

// GetPlugins returns the Plugins field value if set, zero value otherwise.
func (o *DtoListPluginsResponse) GetPlugins() map[string][]string {
	if o == nil || IsNil(o.Plugins) {
		var ret map[string][]string
		return ret
	}
	return *o.Plugins
}

// GetPluginsOk returns a tuple with the Plugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoListPluginsResponse) GetPluginsOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Plugins) {
		return nil, false
	}
	return o.Plugins, true
}

// HasPlugins returns a boolean if a field has been set.
func (o *DtoListPluginsResponse) HasPlugins() bool {
	if o != nil && !IsNil(o.Plugins) {
		return true
	}

	return false
}

// SetPlugins gets a reference to the given map[string][]string and assigns it to the Plugins field.
func (o *DtoListPluginsResponse) SetPlugins(v map[string][]string) {
	o.Plugins = &v
}

func (o DtoListPluginsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoListPluginsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Plugins) {
		toSerialize["plugins"] = o.Plugins
	}
	return toSerialize, nil
}

type NullableDtoListPluginsResponse struct {
	value *DtoListPluginsResponse
	isSet bool
}

func (v NullableDtoListPluginsResponse) Get() *DtoListPluginsResponse {
	return v.value
}

func (v *NullableDtoListPluginsResponse) Set(val *DtoListPluginsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoListPluginsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoListPluginsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoListPluginsResponse(val *DtoListPluginsResponse) *NullableDtoListPluginsResponse {
	return &NullableDtoListPluginsResponse{value: val, isSet: true}
}

func (v NullableDtoListPluginsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoListPluginsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


