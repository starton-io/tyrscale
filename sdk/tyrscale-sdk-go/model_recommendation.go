/*
Tyrscale Manager API

This is the manager service for Tyrscale

API version: 1.0
Contact: support@starton.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tyrscalesdkgo

import (
	"encoding/json"
)

// checks if the Recommendation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Recommendation{}

// Recommendation struct for Recommendation
type Recommendation struct {
	NetworkName *string `json:"network_name,omitempty"`
	RouteUuid *string `json:"route_uuid,omitempty"`
	Schedule *string `json:"schedule,omitempty"`
	Strategy *StrategyName `json:"strategy,omitempty"`
}

// NewRecommendation instantiates a new Recommendation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecommendation() *Recommendation {
	this := Recommendation{}
	return &this
}

// NewRecommendationWithDefaults instantiates a new Recommendation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecommendationWithDefaults() *Recommendation {
	this := Recommendation{}
	return &this
}

// GetNetworkName returns the NetworkName field value if set, zero value otherwise.
func (o *Recommendation) GetNetworkName() string {
	if o == nil || IsNil(o.NetworkName) {
		var ret string
		return ret
	}
	return *o.NetworkName
}

// GetNetworkNameOk returns a tuple with the NetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recommendation) GetNetworkNameOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkName) {
		return nil, false
	}
	return o.NetworkName, true
}

// HasNetworkName returns a boolean if a field has been set.
func (o *Recommendation) HasNetworkName() bool {
	if o != nil && !IsNil(o.NetworkName) {
		return true
	}

	return false
}

// SetNetworkName gets a reference to the given string and assigns it to the NetworkName field.
func (o *Recommendation) SetNetworkName(v string) {
	o.NetworkName = &v
}

// GetRouteUuid returns the RouteUuid field value if set, zero value otherwise.
func (o *Recommendation) GetRouteUuid() string {
	if o == nil || IsNil(o.RouteUuid) {
		var ret string
		return ret
	}
	return *o.RouteUuid
}

// GetRouteUuidOk returns a tuple with the RouteUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recommendation) GetRouteUuidOk() (*string, bool) {
	if o == nil || IsNil(o.RouteUuid) {
		return nil, false
	}
	return o.RouteUuid, true
}

// HasRouteUuid returns a boolean if a field has been set.
func (o *Recommendation) HasRouteUuid() bool {
	if o != nil && !IsNil(o.RouteUuid) {
		return true
	}

	return false
}

// SetRouteUuid gets a reference to the given string and assigns it to the RouteUuid field.
func (o *Recommendation) SetRouteUuid(v string) {
	o.RouteUuid = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *Recommendation) GetSchedule() string {
	if o == nil || IsNil(o.Schedule) {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recommendation) GetScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *Recommendation) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *Recommendation) SetSchedule(v string) {
	o.Schedule = &v
}

// GetStrategy returns the Strategy field value if set, zero value otherwise.
func (o *Recommendation) GetStrategy() StrategyName {
	if o == nil || IsNil(o.Strategy) {
		var ret StrategyName
		return ret
	}
	return *o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recommendation) GetStrategyOk() (*StrategyName, bool) {
	if o == nil || IsNil(o.Strategy) {
		return nil, false
	}
	return o.Strategy, true
}

// HasStrategy returns a boolean if a field has been set.
func (o *Recommendation) HasStrategy() bool {
	if o != nil && !IsNil(o.Strategy) {
		return true
	}

	return false
}

// SetStrategy gets a reference to the given StrategyName and assigns it to the Strategy field.
func (o *Recommendation) SetStrategy(v StrategyName) {
	o.Strategy = &v
}

func (o Recommendation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Recommendation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkName) {
		toSerialize["network_name"] = o.NetworkName
	}
	if !IsNil(o.RouteUuid) {
		toSerialize["route_uuid"] = o.RouteUuid
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.Strategy) {
		toSerialize["strategy"] = o.Strategy
	}
	return toSerialize, nil
}

type NullableRecommendation struct {
	value *Recommendation
	isSet bool
}

func (v NullableRecommendation) Get() *Recommendation {
	return v.value
}

func (v *NullableRecommendation) Set(val *Recommendation) {
	v.value = val
	v.isSet = true
}

func (v NullableRecommendation) IsSet() bool {
	return v.isSet
}

func (v *NullableRecommendation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecommendation(val *Recommendation) *NullableRecommendation {
	return &NullableRecommendation{value: val, isSet: true}
}

func (v NullableRecommendation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecommendation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


