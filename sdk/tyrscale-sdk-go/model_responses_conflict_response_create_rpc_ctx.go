/*
Tyrscale Manager API

This is the manager service for Tyrscale

API version: 1.0
Contact: support@starton.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tyrscalesdkgo

import (
	"encoding/json"
)

// checks if the ResponsesConflictResponseCreateRpcCtx type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesConflictResponseCreateRpcCtx{}

// ResponsesConflictResponseCreateRpcCtx struct for ResponsesConflictResponseCreateRpcCtx
type ResponsesConflictResponseCreateRpcCtx struct {
	Code *int32 `json:"code,omitempty"`
	Context *CreateRpcCtx `json:"context,omitempty"`
	Message *string `json:"message,omitempty"`
	Status *int32 `json:"status,omitempty"`
}

// NewResponsesConflictResponseCreateRpcCtx instantiates a new ResponsesConflictResponseCreateRpcCtx object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesConflictResponseCreateRpcCtx() *ResponsesConflictResponseCreateRpcCtx {
	this := ResponsesConflictResponseCreateRpcCtx{}
	return &this
}

// NewResponsesConflictResponseCreateRpcCtxWithDefaults instantiates a new ResponsesConflictResponseCreateRpcCtx object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesConflictResponseCreateRpcCtxWithDefaults() *ResponsesConflictResponseCreateRpcCtx {
	this := ResponsesConflictResponseCreateRpcCtx{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ResponsesConflictResponseCreateRpcCtx) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesConflictResponseCreateRpcCtx) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ResponsesConflictResponseCreateRpcCtx) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *ResponsesConflictResponseCreateRpcCtx) SetCode(v int32) {
	o.Code = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *ResponsesConflictResponseCreateRpcCtx) GetContext() CreateRpcCtx {
	if o == nil || IsNil(o.Context) {
		var ret CreateRpcCtx
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesConflictResponseCreateRpcCtx) GetContextOk() (*CreateRpcCtx, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *ResponsesConflictResponseCreateRpcCtx) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given CreateRpcCtx and assigns it to the Context field.
func (o *ResponsesConflictResponseCreateRpcCtx) SetContext(v CreateRpcCtx) {
	o.Context = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ResponsesConflictResponseCreateRpcCtx) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesConflictResponseCreateRpcCtx) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ResponsesConflictResponseCreateRpcCtx) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ResponsesConflictResponseCreateRpcCtx) SetMessage(v string) {
	o.Message = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ResponsesConflictResponseCreateRpcCtx) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesConflictResponseCreateRpcCtx) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ResponsesConflictResponseCreateRpcCtx) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *ResponsesConflictResponseCreateRpcCtx) SetStatus(v int32) {
	o.Status = &v
}

func (o ResponsesConflictResponseCreateRpcCtx) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesConflictResponseCreateRpcCtx) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Context) {
		toSerialize["context"] = o.Context
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableResponsesConflictResponseCreateRpcCtx struct {
	value *ResponsesConflictResponseCreateRpcCtx
	isSet bool
}

func (v NullableResponsesConflictResponseCreateRpcCtx) Get() *ResponsesConflictResponseCreateRpcCtx {
	return v.value
}

func (v *NullableResponsesConflictResponseCreateRpcCtx) Set(val *ResponsesConflictResponseCreateRpcCtx) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesConflictResponseCreateRpcCtx) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesConflictResponseCreateRpcCtx) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesConflictResponseCreateRpcCtx(val *ResponsesConflictResponseCreateRpcCtx) *NullableResponsesConflictResponseCreateRpcCtx {
	return &NullableResponsesConflictResponseCreateRpcCtx{value: val, isSet: true}
}

func (v NullableResponsesConflictResponseCreateRpcCtx) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesConflictResponseCreateRpcCtx) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


