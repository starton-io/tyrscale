/* tslint:disable */
/* eslint-disable */
/**
 * Tyrscale Manager API
 * This is the manager service for Tyrscale
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@starton.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateRpcCtx } from './CreateRpcCtx';
import {
    CreateRpcCtxFromJSON,
    CreateRpcCtxFromJSONTyped,
    CreateRpcCtxToJSON,
} from './CreateRpcCtx';

/**
 * 
 * @export
 * @interface ResponsesConflictResponseCreateRpcCtx
 */
export interface ResponsesConflictResponseCreateRpcCtx {
    /**
     * 
     * @type {number}
     * @memberof ResponsesConflictResponseCreateRpcCtx
     */
    code?: number;
    /**
     * 
     * @type {CreateRpcCtx}
     * @memberof ResponsesConflictResponseCreateRpcCtx
     */
    context?: CreateRpcCtx;
    /**
     * 
     * @type {string}
     * @memberof ResponsesConflictResponseCreateRpcCtx
     */
    message?: string;
    /**
     * 
     * @type {number}
     * @memberof ResponsesConflictResponseCreateRpcCtx
     */
    status?: number;
}

/**
 * Check if a given object implements the ResponsesConflictResponseCreateRpcCtx interface.
 */
export function instanceOfResponsesConflictResponseCreateRpcCtx(value: object): value is ResponsesConflictResponseCreateRpcCtx {
    return true;
}

export function ResponsesConflictResponseCreateRpcCtxFromJSON(json: any): ResponsesConflictResponseCreateRpcCtx {
    return ResponsesConflictResponseCreateRpcCtxFromJSONTyped(json, false);
}

export function ResponsesConflictResponseCreateRpcCtxFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponsesConflictResponseCreateRpcCtx {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'] == null ? undefined : json['code'],
        'context': json['context'] == null ? undefined : CreateRpcCtxFromJSON(json['context']),
        'message': json['message'] == null ? undefined : json['message'],
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function ResponsesConflictResponseCreateRpcCtxToJSON(value?: ResponsesConflictResponseCreateRpcCtx | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'code': value['code'],
        'context': CreateRpcCtxToJSON(value['context']),
        'message': value['message'],
        'status': value['status'],
    };
}

