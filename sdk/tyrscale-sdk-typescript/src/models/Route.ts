/* tslint:disable */
/* eslint-disable */
/**
 * Tyrscale Manager API
 * This is the manager service for Tyrscale
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@starton.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BalancerLoadBalancerStrategy } from './BalancerLoadBalancerStrategy';
import {
    BalancerLoadBalancerStrategyFromJSON,
    BalancerLoadBalancerStrategyFromJSONTyped,
    BalancerLoadBalancerStrategyToJSON,
} from './BalancerLoadBalancerStrategy';
import type { CircuitbreakerSettings } from './CircuitbreakerSettings';
import {
    CircuitbreakerSettingsFromJSON,
    CircuitbreakerSettingsFromJSONTyped,
    CircuitbreakerSettingsToJSON,
} from './CircuitbreakerSettings';
import type { HealthCheckConfig } from './HealthCheckConfig';
import {
    HealthCheckConfigFromJSON,
    HealthCheckConfigFromJSONTyped,
    HealthCheckConfigToJSON,
} from './HealthCheckConfig';

/**
 * 
 * @export
 * @interface Route
 */
export interface Route {
    /**
     * 
     * @type {CircuitbreakerSettings}
     * @memberof Route
     */
    circuitBreaker?: CircuitbreakerSettings;
    /**
     * 
     * @type {HealthCheckConfig}
     * @memberof Route
     */
    healthCheck?: HealthCheckConfig;
    /**
     * 
     * @type {string}
     * @memberof Route
     */
    host: string;
    /**
     * 
     * @type {BalancerLoadBalancerStrategy}
     * @memberof Route
     */
    loadBalancerStrategy: BalancerLoadBalancerStrategy;
    /**
     * 
     * @type {string}
     * @memberof Route
     */
    path?: string;
    /**
     * 
     * @type {string}
     * @memberof Route
     */
    uuid?: string;
}

/**
 * Check if a given object implements the Route interface.
 */
export function instanceOfRoute(value: object): value is Route {
    if (!('host' in value) || value['host'] === undefined) return false;
    if (!('loadBalancerStrategy' in value) || value['loadBalancerStrategy'] === undefined) return false;
    return true;
}

export function RouteFromJSON(json: any): Route {
    return RouteFromJSONTyped(json, false);
}

export function RouteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Route {
    if (json == null) {
        return json;
    }
    return {
        
        'circuitBreaker': json['circuit_breaker'] == null ? undefined : CircuitbreakerSettingsFromJSON(json['circuit_breaker']),
        'healthCheck': json['health_check'] == null ? undefined : HealthCheckConfigFromJSON(json['health_check']),
        'host': json['host'],
        'loadBalancerStrategy': BalancerLoadBalancerStrategyFromJSON(json['load_balancer_strategy']),
        'path': json['path'] == null ? undefined : json['path'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
    };
}

export function RouteToJSON(value?: Route | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'circuit_breaker': CircuitbreakerSettingsToJSON(value['circuitBreaker']),
        'health_check': HealthCheckConfigToJSON(value['healthCheck']),
        'host': value['host'],
        'load_balancer_strategy': BalancerLoadBalancerStrategyToJSON(value['loadBalancerStrategy']),
        'path': value['path'],
        'uuid': value['uuid'],
    };
}

