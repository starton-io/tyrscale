stages:
  - install
  - test
  - release


# Enable when using test in ci/cd
variables:
  FF_USE_FASTZIP: "true"
  # These can be specified per job or per pipeline
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"
  GOPRIVATE: "gitlab.com/starton"
  GOPATH: $CI_PROJECT_DIR/.go

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
    GOPRIVATE: "gitlab.com/starton"
    GO_PROJECT: gihtub.com/starton-io/tyrscale
    KUBERNETES_CPU_LIMIT: "2"
    ARTIFACTS_DIR: artifacts
  before_script:
    - mkdir -p .go
    - mkdir -p ${CI_PROJECT_DIR}/${ARTIFACTS_DIR}
    - touch ~/.netrc
    - chmod 0600 ~/.netrc
    - echo "machine gitlab.com login gitlab-ci-token password $CI_JOB_TOKEN" > ~/.netrc
  cache:
    paths:
      - .go/pkg/mod/
    policy: pull-push

install-deps:
  stage: install
  tags: ["starton-standard-v2"]
  image: golang:1.21.6
  extends: .go-cache
  script:
    - echo "Installing dependencies"
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_COMMIT_TAG == null
    - if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TAG == null


test-lint:
  stage: test
  tags: ["starton-standard-v2"]
  image: golangci/golangci-lint:v1.58.0
  extends: .go-cache
  script:
    - make test-lint
  variables:
    ARTIFACTS_DIR: "artifacts"

    KUBERNETES_CPU_REQUEST: "3"
    KUBERNETES_CPU_LIMIT: "3"
    KUBERNETES_MEMORY_REQUEST: "6Gi"
    KUBERNETES_MEMORY_LIMIT: "6Gi"
    KUBERNETES_EPHEMERAL_STORAGE_REQUEST: "6Gi"
    KUBERNETES_EPHEMERAL_STORAGE_LIMIT: "8Gi"
 
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_COMMIT_TAG == null
    - if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TAG == null
  parallel:
    matrix:
      - SERVICE: [manager, gateway]

test-unit:
  stage: test
  tags: ["starton-standard-v2"]
  image: golang:1.21.6
  extends: .go-cache
  variables:
    KUBERNETES_CPU_REQUEST: "3"
    KUBERNETES_CPU_LIMIT: "3"
    KUBERNETES_MEMORY_REQUEST: "6Gi"
    KUBERNETES_MEMORY_LIMIT: "6Gi"
    KUBERNETES_EPHEMERAL_STORAGE_REQUEST: "6Gi"
    KUBERNETES_EPHEMERAL_STORAGE_LIMIT: "8Gi"
 
  script:
    - mkdir -p ${CI_PROJECT_DIR}/${ARTIFACTS_DIR}/${SERVICE}
    - ls -al
    - make test ENV=ci
  after_script:
    - >
      if [ $CI_JOB_STATUS != 'success' ]; then
        cat ${CI_PROJECT_DIR}/${ARTIFACTS_DIR}/${SERVICE}/tests.out 
      fi
    - make test-report ENV=ci
  coverage: '/^total:\s+\(statements\)\s+\d+.\d+%/'
  artifacts:
    paths:
      - ${ARTIFACTS_DIR}/${SERVICE}
    reports:
      junit: ${ARTIFACTS_DIR}/${SERVICE}/report.xml
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_COMMIT_TAG == null
    - if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TAG == null
  parallel:
    matrix:
      - SERVICE: [manager, gateway]


# TODO: Add test-gateway job
#test-gateway:
#  stage: test
#  tags: ["starton-standard-v2"]
#  image: golang:1.20
#  extends: .go-cache
#  before_script:
#    - go mod tidy
#  script:
#    - mkdir -p ${GOPATH}/src/${GO_PROJECT}
#    - mkdir -p ${CI_PROJECT_DIR}/${ARTIFACTS_DIR}
#    - cp -r ${CI_PROJECT_DIR}/* ${GOPATH}/src/${GO_PROJECT}/
#    - cd ${GOPATH}/src/${GO_PROJECT}
#    - make test ENV=ci
#  after_script:
#    - >
#      if [ $CI_JOB_STATUS != 'success' ]; then
#        cat ${CI_PROJECT_DIR}/${ARTIFACTS_DIR}/tests.out 
#      fi
#  coverage: '/^total:\s+\(statements\)\s+\d+.\d+%/'
#  artifacts:
#    paths:
#      - ${ARTIFACTS_DIR}
#    reports:
#      junit: ${ARTIFACTS_DIR}/report.xml
#  only: ["merge_requests", "master"]



release:
  stage: release
  image: docker:stable
  services:
    - docker:dind

  variables:
    # Optionally use GitLab's built-in image registry.
    DOCKER_REGISTRY: $CI_REGISTRY
    DOCKER_USERNAME: $CI_REGISTRY_USER
    DOCKER_PASSWORD: $CI_REGISTRY_PASSWORD

    # Or, use any registry, including the official one.
    #DOCKER_REGISTRY: https://index.docker.io/v1/

    # Disable shallow cloning so that goreleaser can diff between tags to
    # generate a changelog.
    GIT_DEPTH: 0

  # Only run this release job for tags, not every commit (for example).
  only:
    refs:
      - tags

  script: |
    # GITLAB_TOKEN is needed to create GitLab releases.
    # DOCKER_* are needed to push Docker images.
    docker run --rm --privileged \
      -v $PWD:/go/src/gihtub.com/starton-io/tyrscale \
      -w /go/src/gihtub.com/starton-io/tyrscale \
      -v /var/run/docker.sock:/var/run/docker.sock \
      -e DOCKER_USERNAME -e DOCKER_PASSWORD -e DOCKER_REGISTRY  \
      -e GITLAB_TOKEN="$CI_JOB_TOKEN" -e CI_JOB_TOKEN="$CI_JOB_TOKEN" \
      goreleaser/goreleaser:v2.3.0 release --clean